% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/over2.R
\name{over2x}
\alias{over2x}
\title{Loop two nested inputs over one or several functions in 'dplyr'}
\usage{
over2x(.x, .y, .fns, ..., .names = NULL)
}
\arguments{
\item{.y}{An atomic vector (expect 'raw' and 'complex') to apply functions to.
Instead of a vector a <\code{\link[=selection_helpers]{selection helper}}> or anything else
that is coercible to an atomic vector can be used. Note that \code{over()} must only
be used to create 'new' columns and will throw an error if \code{.x} contains
existing column names. To transform existing columns use \code{\link[dplyr:across]{dplyr::across()}}.}

\item{...}{Additional arguments for the function calls in \code{.fns}.}

\item{.names}{A glue specification that describes how to name the output
columns. This can use \code{{vec}} to stand for the selected vector element, and
\code{{fn}} to stand for the name of the function being applied. The default
(\code{NULL}) is equivalent to \code{"{vec}"} for the single function case and
\code{"{vec}_{fn}"} for the case where a list is used for \code{.fns}.}
}
\value{
A tibble with one column for each element in \code{.x} and each function in \code{.fns};.
}
\description{
\code{over()} makes it easy to create new colums inside a \code{\link[dplyr:mutate]{dplyr::mutate()}} or
\code{\link[dplyr:summarise]{dplyr::summarise()}} call by applying a function (or a set of functions) to
a vector using a syntax similar to \code{\link[dplyr:across]{dplyr::across()}}. The main difference is
that \code{\link[dplyr:across]{dplyr::across()}} transforms or creates new columns based on existing ones,
while \code{over()} creates new columns based on a vector to which it will apply one
or several functions. Whereas \code{\link[dplyr:across]{dplyr::across()}} allows \code{tidy-selection} helpers
to select columns, \code{over()} provides its own helper functions to select strings
or values based on either (1) column names or (2) values of specified columns.
See the examples below and the \code{vignette("over")} for more details.

inherit .x from over
inherit .fns from over
}
\section{Examples}{


\code{over()} can only be used inside \code{dplyr::mutate} or \code{dplyr::summarise}.
It has two main use cases. They differ in how the elements in \code{.x}
are used. Let's first attach \code{dplyr}:\if{html}{\out{<div class="r">}}\preformatted{library(dplyr)

# For better printing
iris <- as_tibble(iris)
}\if{html}{\out{</div>}}
}

